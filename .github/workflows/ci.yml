name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    name: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - name: "Install latest stable Rust"
        run: rustup update
      - run: cargo fmt --all -- --check
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - run: cargo hack check --all --ignore-private --each-feature --no-dev-deps
      - run: cargo check --all --all-targets --all-features
      - run: cargo test
      - run: cargo clippy --workspace --all-targets --all-features --locked -- -D warnings

  msrv:
    name: msrv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: SebRollen/toml-action@v1.2.0
        id: msrv
        with:
          file: "Cargo.toml"
          field: "package.rust-version"
      - name: "Install Rust toolchain"
        run: rustup default ${{ steps.msrv.outputs.value }}
      - run: cargo +${{ steps.msrv.outputs.value }} test
